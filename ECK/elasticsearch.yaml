apiVersion: v1
kind: Service
metadata:
  name: ek-test-es-master-nodes
  namespace: elastic-system
  labels:
    type: controller-plane
spec:
  ports:
    - name: https
      port: 9200
      targetPort: 9200
  selector:
    elasticsearch.k8s.elastic.co/cluster-name: "ek-test"
    elasticsearch.k8s.elastic.co/node-master: "true"
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  name: ek-test-es-data-nodes
  namespace: elastic-system
  labels:
    type: controller-plane
spec:
  ports:
    - name: https
      port: 9200
      targetPort: 9200
  selector:
    elasticsearch.k8s.elastic.co/cluster-name: "ek-test"
    elasticsearch.k8s.elastic.co/node-data: "true"
  type: LoadBalancer

---

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: ek-test
  namespace: elastic-system
spec:
  version: <eck-version>
  auth:
    fileRealm:
    - secretName: ek-test-filerealm-secret
  nodeSets:
  - name: master
    count: 3
    config:
      node.roles: ["master"]
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: type
                  operator: In
                  values:
                  - controller-plane
              topologyKey: "kubernetes.io/hostname"
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 2Gi
              cpu: 1
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
        namespace: elastic-system
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 16Gi
        storageClassName: <storageClassName>
  - name: data
    count: 3
    config:
      node.roles: ["data"]
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: type
                  operator: In
                  values:
                  - worker
              topologyKey: "kubernetes.io/hostname"
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 2Gi
              cpu: 1
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
        namespace: elastic-system
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: <storageClassName>